/* This file was automatically generated by libvirt-wireshark-dissector/util/genxdrdef.pl. *DO NOT MODIFY* this file directly. */
#ifndef _LXC_H_
#define _LXC_H_
static int hf_lxc_domain_open_namespace_args__dom = -1;
static int hf_lxc_domain_open_namespace_args__flags = -1;
static int hf_lxc_domain_open_namespace_args = -1;
static gint ett_lxc_domain_open_namespace_args = -1;
static gboolean dissect_xdr_lxc_domain_open_namespace_args(tvbuff_t *tvb, proto_tree *tree, XDR *xdrs, int hf)
{
    goffset start;
    proto_item *ti;
    
    start = VIR_HEADER_LEN + xdr_getpos(xdrs);
    ti = proto_tree_add_item(tree, hf, tvb, start, -1, ENC_NA);
    proto_item_append_text(ti, " :: lxc_domain_open_namespace_args");
    tree = proto_item_add_subtree(ti, ett_lxc_domain_open_namespace_args);
    
    hf = hf_lxc_domain_open_namespace_args__dom;
    if (!dissect_xdr_remote_nonnull_domain(tvb, tree, xdrs, hf)) return FALSE;
    
    hf = hf_lxc_domain_open_namespace_args__flags;
    if (!dissect_xdr_u_int(tvb, tree, xdrs, hf)) return FALSE;
    proto_item_set_len(ti, xdr_getpos(xdrs) - start + VIR_HEADER_LEN);
    return TRUE;
}
#define LXC_PROGRAM (0x00068000)
#define LXC_PROTOCOL_VERSION (1)
static const vir_dissector_index_t lxc_dissectors[] = {
    { 1, dissect_xdr_lxc_domain_open_namespace_args, NULL, NULL },
};
static const value_string lxc_procedure_strings[] = {
    { 1, "DOMAIN_OPEN_NAMESPACE" },
    { 0, NULL }
};
#endif /* _LXC_H_ */
